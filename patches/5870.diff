diff --git a/src/Http/Controllers/CP/Collections/EntriesController.php b/src/Http/Controllers/CP/Collections/EntriesController.php
index 3c67641d01..7f2c8d1a4b 100644
--- a/src/Http/Controllers/CP/Collections/EntriesController.php
+++ b/src/Http/Controllers/CP/Collections/EntriesController.php
@@ -3,6 +3,7 @@
 namespace Statamic\Http\Controllers\CP\Collections;
 
 use Illuminate\Http\Request;
+use Illuminate\Support\Carbon;
 use Illuminate\Validation\ValidationException;
 use Statamic\Contracts\Entries\Entry as EntryContract;
 use Statamic\CP\Breadcrumbs;
@@ -199,7 +200,7 @@ public function update(Request $request, $collection, $entry)
         }
 
         if ($entry->collection()->dated()) {
-            $entry->date($this->formatDateForSaving($request->date));
+            $entry->date($this->toCarbonInstanceForSaving($request->date));
         }
 
         $entry->slug($this->resolveSlug($request));
@@ -341,7 +342,7 @@ public function store(Request $request, $collection, $site)
             ->data($values);
 
         if ($collection->dated()) {
-            $entry->date($this->formatDateForSaving($request->date));
+            $entry->date($this->toCarbonInstanceForSaving($request->date));
         }
 
         if (($structure = $collection->structure()) && ! $collection->orderable()) {
@@ -450,15 +451,15 @@ protected function extractAssetsFromValues($values)
             ->values();
     }
 
-    protected function formatDateForSaving($date)
+    protected function toCarbonInstanceForSaving($date)
     {
-        // If there's a time, adjust the format into a datetime order string.
-        if (strlen($date) > 10) {
-            $date = str_replace(':', '', $date);
-            $date = str_replace(' ', '-', $date);
-        }
+        // The date will be the value from the Date fieldtype's Vue component.
+        // If time is enabled, it will include hours/minutes/seconds, even if seconds are disabled.
+        // If time is disabled, it will just be the date portion.
 
-        return $date;
+        return (strlen($date) > 10)
+            ? Carbon::createFromFormat('Y-m-d H:i:s', $date)
+            : Carbon::createFromFormat('Y-m-d', $date)->startOfDay();
     }
 
     private function validateUniqueUri($entry, $tree, $parent)
